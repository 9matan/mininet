{
  "name": "Mininet",
  "tagline": "A lightweight C++ neural network library.",
  "body": "# mininet\r\n\r\n[![Build Status](https://travis-ci.org/dfridovi/mininet.svg?branch=master)](https://travis-ci.org/dfridovi/mininet)\r\n[![License](https://img.shields.io/badge/license-BSD-blue.svg)](https://github.com/dfridovi/mininet/blob/master/LICENSE)\r\n\r\nA lightweight C++ framework for deep learning. **mininet** is written by [David Fridovich-Keil](http://people.eecs.berkeley.edu/~dfk/), a second-year PhD student in the [Berkeley Artificial Intelligence Research (BAIR) Lab](http://bair.berkeley.edu), and Sara Fridovich-Keil, a junior electrical engineering student student at Princeton.\r\n\r\n## Status\r\n**mininet** is still under active development. We hope to have a first release soon though, so stay tuned!\r\n\r\n## Structure\r\nAll source code is located in `src/`; headers are in `include/`; unit tests are in `/test/`; and executables are in `exec/`. Compiled binaries will be placed in `bin/`.\r\n\r\n## Dependencies\r\nI may miss a few here, but here is a list of dependencies:\r\n\r\n* [Eigen](http://eigen.tuxfamily.org/dox/) (header-only linear algebra library)\r\n* Gflags (Google's command-line flag manager)\r\n* Glog (Google's logging tool)\r\n\r\nAll of these may be installed very easily. If you run into any trouble, though, we are more than happy to help you figure out what's going on. Just post an [issue](https://github.com/dfridovi/mininet/issues) on this repository and we will reply as soon as possible.\r\n\r\n## Usage\r\nYou'll need to begin by building the repository. From the top directory, type the following sequence of commands:\r\n\r\n```\r\nmkdir bin\r\nmkdir build\r\ncd build\r\ncmake ..\r\nmake -j4\r\n```\r\n\r\nThis should build all tests and executables. In order to run tests, you can run the following command:\r\n\r\n```\r\n./run_tests\r\n```\r\n\r\nfrom within the `build/` directory you just made. All the tests should pass, and none should take more than a second or so to run.\r\n\r\nExecutables are automatically placed within the `bin/` directory that you created. To run them, just type `./(name-of-executable)`.\r\n\r\nTo the extent that it makes sense, all parameters are accessible from the command line via Gflags. For help with command line options, simply run the following command:\r\n\r\n```\r\n./(name-of-executable) --help\r\n```\r\n\r\n## API documentation\r\nWe use Doxygen to auto-generate web-based [documentation](https://dfridovi.github.io/mininet/documentation/html/). Although we do not follow the Doxygen guidelines for writing comments, auto-generation still seems to do a fairly reasonable job.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}